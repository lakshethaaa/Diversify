from sklearn.preprocessing import MinMaxScaler
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense

# Load your dataset here
# Ensure you have columns: Open, Close, High, Low, Volume, Adj Close, Moving Average, Percentage Returns, and stock name

# Normalize the numerical features
scaler = MinMaxScaler()
numerical_cols = ['Open', 'Close', 'High', 'Low', 'Volume', 'Adj Close']
df3[numerical_cols] = scaler.fit_transform(df3[numerical_cols])

# Define your sequence length (e.g., number of past days to consider)
sequence_length = 30

# Create sequences of data
X2 = []
y2 = []
for i in range(len(df3) - sequence_length):
    X2.append(df3[numerical_cols].values[i:i+sequence_length])
    y2.append(df3['Moving_Average_Percentage_Return'].values[i+sequence_length])

X2 = np.array(X2)
y2 = np.array(y2)

# Split the data into training and testing sets
train_size = int(0.8 * len(X2))
X_train2, X_test2 = X2[:train_size], X2[train_size:]
y_train2, y_test2 = y2[:train_size], y2[train_size:]
