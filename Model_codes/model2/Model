from tensorflow.keras.layers import LSTM, Dense, Dropout
from tensorflow.keras.optimizers import Adam

# Build the LSTM model1 with dropout layers
model1 = Sequential()
model1.add(LSTM(64, input_shape=(sequence_length, len(numerical_cols)), return_sequences=True))
model1.add(Dropout(0.1))
model1.add(LSTM(64, return_sequences=False))
model1.add(Dropout(0.1))
model1.add(Dense(1))
model1.compile(optimizer=Adam(learning_rate=0.001), loss='mean_squared_error')

# Train the model1 with early stopping
from tensorflow.keras.callbacks import EarlyStopping

early_stopping = EarlyStopping(monitor='val_loss', patience=5, restore_best_weights=True)
model1.fit(X_train1, y_train1, epochs=50, batch_size=10, validation_data=(X_test1, y_test1), callbacks=[early_stopping])
# Evaluate the model1 on the test set
loss = model1.evaluate(X_test1, y_test1)
print(f'Test Loss: {loss}')
